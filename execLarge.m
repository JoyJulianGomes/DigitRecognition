function [trainingCost, validationCost, trainingAcc, validationAcc,...
          model_1_trained_params, Theta1, Theta2, Theta3, Theta4]= execLarge(model_1_initial_params,...
                                                     Input_Layer_Size,...
                                                     Hidden_Layer_1_Size,...
                                                     Hidden_Layer_2_Size,...
                                                     Hidden_Layer_3_Size,...
                                                     Output_Layer_Size,...
                                                     trainXR, trainY,...
                                                     valdXR, valdY,...
                                                     lambda, options)
%{
ignoring this part as nnparams need to send back and forth in epoch setting
model_1_initial_params = BuildLargeModel(Input_Layer_Size,...
                                         Hidden_Layer_1_Size,...
                                         Hidden_Layer_2_Size,...
                                         Hidden_Layer_3_Size,...
                                         Output_Layer_Size);
%}
model_1_trained_params = TrainLargeModel(model_1_initial_params,...
                                         Input_Layer_Size,...
                                         Hidden_Layer_1_Size,...
                                         Hidden_Layer_2_Size,...
                                         Hidden_Layer_3_Size,...
                                         Output_Layer_Size,...
                                         trainXR, trainY,...
                                         lambda, options);
trainingCost = LargennCostFunction(model_1_trained_params, ...
                                   Input_Layer_Size,...
                                   Hidden_Layer_1_Size,...
                                   Hidden_Layer_2_Size,...
                                   Hidden_Layer_3_Size,...
                                   Output_Layer_Size,...
                                   trainXR, trainY, lambda);
validationCost = LargennCostFunction(model_1_trained_params, ...
                                     Input_Layer_Size,...
                                     Hidden_Layer_1_Size,...
                                     Hidden_Layer_2_Size,...
                                     Hidden_Layer_3_Size,...
                                     Output_Layer_Size,...
                                     valdXR, valdY, 0);
[Theta1, Theta2, Theta3, Theta4] = LargeRollParams(model_1_trained_params, ...
                                                   Input_Layer_Size,...
                                                   Hidden_Layer_1_Size,...
                                                   Hidden_Layer_2_Size,...
                                                   Hidden_Layer_3_Size,...
                                                   Output_Layer_Size);
[trainingAcc, train_pred] = Largepredict(Theta1, Theta2, Theta3, Theta4,...
                                 trainXR, trainY);
[validationAcc, vald_pred] = Largepredict(Theta1, Theta2, Theta3, Theta4,...
                                 valdXR, valdY);

end